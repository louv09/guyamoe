# Generated by Django 5.2.2 on 2025-06-04 23:08

import django.db.models.deletion
import django_extensions.db.fields
import reader.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('scrapping_uuids', models.CharField(help_text='External source uuids as a comma separated list of uuids (example: "123e4567-e89b-12d3-a456-426614174000" or "123e4567-e89b-12d3-a456-426614174000,123e4567-e89b-12d3-a456-426614174001"), ordering does not matter.', max_length=400, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, default=None, editable=False, null=True, populate_from='name', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='HitCount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('hits', models.PositiveIntegerField(default=0, verbose_name='Hits')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
        ),
        migrations.CreateModel(
            name='Series',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('synopsis', models.TextField(blank=True, null=True)),
                ('alternative_titles', models.TextField(blank=True, null=True)),
                ('next_release_page', models.BooleanField(default=False)),
                ('next_release_time', models.DateTimeField(blank=True, db_index=True, default=None, null=True)),
                ('next_release_html', models.TextField(blank=True, null=True)),
                ('indexed', models.BooleanField(default=False)),
                ('preferred_sort', models.CharField(blank=True, max_length=200, null=True)),
                ('scraping_enabled', models.BooleanField(default=False)),
                ('scraping_source', models.CharField(choices=[('MD', 'MangaDex')], default='MD', max_length=2)),
                ('scraping_identifiers', models.TextField(blank=True, null=True)),
                ('scraping_uuid', models.CharField(blank=True, max_length=200, null=True)),
                ('is_oneshot', models.BooleanField(default=False)),
                ('is_nsfw', models.BooleanField(default=False)),
                ('discord_role_id', models.CharField(blank=True, help_text='To find the role id, enter \\@TheRole on discord. Only enter numbers (e.g. <@&1234567890> => 1234567890)', max_length=200, null=True)),
                ('artist', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='series_artist', to='reader.person')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='series_author', to='reader.person')),
            ],
            options={
                'verbose_name_plural': 'series',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='ChapterIndex',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('word', models.CharField(db_index=True, max_length=48)),
                ('chapter_and_pages', models.TextField()),
                ('series', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reader.series')),
            ],
            options={
                'unique_together': {('word', 'series')},
            },
        ),
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200)),
                ('chapter_number', models.FloatField(db_index=True)),
                ('folder', models.CharField(blank=True, max_length=255, null=True)),
                ('volume', models.PositiveSmallIntegerField(blank=True, db_index=True, default=None, null=True)),
                ('uploaded_on', models.DateTimeField(blank=True, db_index=True, default=None, null=True)),
                ('updated_on', models.DateTimeField(blank=True, db_index=True, default=None, null=True)),
                ('version', models.PositiveSmallIntegerField(blank=True, default=None, null=True)),
                ('preferred_sort', models.CharField(blank=True, max_length=200, null=True)),
                ('scraper_hash', models.CharField(blank=True, max_length=36)),
                ('is_public', models.BooleanField(default=False)),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='reader.group')),
                ('series', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reader.series')),
            ],
            options={
                'ordering': ('chapter_number',),
                'unique_together': {('chapter_number', 'series', 'group')},
            },
        ),
        migrations.CreateModel(
            name='Volume',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('volume_number', models.PositiveIntegerField(db_index=True)),
                ('volume_cover', models.ImageField(blank=True, upload_to=reader.models.new_volume_path_file_name)),
                ('series', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reader.series')),
            ],
            options={
                'unique_together': {('volume_number', 'series')},
            },
        ),
    ]
